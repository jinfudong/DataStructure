'''
思路：
    使用快慢两个指针找到链表中点，慢指针每次前进一步，快指针每次前进两步，
    在慢指针前进的过程中，同时修改其next指针，使得链表前半部分反序，最后比较中点两侧的链表是否相等
    时间复杂度：O(n)
    空间复杂度：O(1)
'''


def reverse_str(str1):
    return str(str1) == str(str1)[::-1]


print(reverse_str(12321))
